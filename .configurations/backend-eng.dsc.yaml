# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: 0.2.0
  ########################################
  ### RESOURCES: System Configuration
  ########################################
  resources:
    # Creates a new Dev Drive
    ### -------------------------------------
    - resource: Disk
      id: DevDrive1
      directives:
        module: StorageDsc
        allowPrerelease: true
      settings:
        DiskId: '0'
        DiskIdType: 'Number'
        DriveLetter: 'Z'
        FSLabel: 'Dev Drive 1'
        DevDrive: true
        AllowDestructive: true
        FSFormat: 'ReFS'
        Size: '50Gb'

    ########################################
    ### Install CLIs, SDKs & Tools
    ########################################
    ### Install Git
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: git
      directives:
        allowPrerelease: true
      settings:
        id: Microsoft.Git

    ### Configure Git to use Default WAM account
    ### -------------------------------------
#    - resource: PSDscResources/Script
#      dependsOn:
#        - git
#      directives:
#        description: Configure Git to use Default WAM account
#      settings:
#        SetScript: |
#          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
#          SET GCM_MSAUTH_USEDEFAULTACCOUNT="true"
#          git config --global credential.msauthUseDefaultAccount true
#        GetScript: return $false
#        TestScript: return $false

    # Clone the Git repository
    - resource: PSDscResources/Script
      directives:
        description: Clone target repository
      settings:
        SetScript: git clone --quiet https://github.com/Lantern-Cloud-Services/DevCenter-Customization.git "Z:\workspaces\devcenter-customization"          
        GetScript: return $false
        TestScript: return $false

    ### Install Visual Studio Code
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: vscode
      directives:
        description: Install Visual Studio Code
        allowPrerelease: false
        securityContext: current
      settings:
        id: Microsoft.VisualStudioCode
        source: winget

    ### Install Docker Desktop
    ### -------------------------------------
#    - resource: Microsoft.WinGet.DSC/WinGetPackage
#      directives:
#        description: Install Docker Desktop
#        allowPrerelease: false
#      settings:
#        id: "Docker.DockerDesktop"
#        source: winget
#      id: Docker.DockerDesktop
      
    ### Install GitHub Desktop
    ### -------------------------------------
#    - resource: Microsoft.WinGet.DSC/WinGetPackage
#      directives:
#        description: Installing GitHub.GitHubDesktop
#        allowPrerelease: false
#        securityContext: current
#      settings:
#        id: "GitHub.GitHubDesktop"
#        source: winget
#      id: GitHub.GitHubDesktop

    ### Install Sublime Text
    ### -------------------------------------
#    - resource: Microsoft.WinGet.DSC/WinGetPackage
#      directives:
#        description: Installing SublimeHQ.SublimeText.4
#        allowPrerelease: false
#        securityContext: current
#      settings:
#        id: "SublimeHQ.SublimeText.4"
#        source: winget
#      id: SublimeHQ.SublimeText.4